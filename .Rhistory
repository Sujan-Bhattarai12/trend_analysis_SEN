climate_data <- readObsFile(cimate_data_era, timezone = 'MST', quiet = F)
#constuct file path using here package
climate_data_wfdei <- here("data", "climate_data.obs")
cimate_data_era <- here("your_dataset.obs")
climate_data <- readObsFile(cimate_data_era, timezone = 'MST', quiet = F)
#constuct file path using here package
climate_data_wfdei <- here("data", "climate_data.obs")
cimate_data_era <- here("your_dataset.obs")
climate_data <- readObsFile(cimate_data_era, timezone = 'MST', quiet = F)
# Load required library
library(dplyr)
# Step 1: Read the CSV file
df <- read.csv("your_dataset.csv", stringsAsFactors = FALSE)
# Step 1: Read the CSV file
df <- read.csv("ERAdata.csv", stringsAsFactors = FALSE)
# Load required library
library(dplyr)
# Step 1: Read the CSV file
df <- read.csv("ERAdata.csv", stringsAsFactors = FALSE)
# Step 2: Convert Date-Time into Year, Month, Day, Hour format
df <- df %>%
mutate(DateTime = as.POSIXct(Index, format="%Y-%m-%d %H:%M:%S")) %>%
mutate(Year = format(DateTime, "%Y"),
Month = format(DateTime, "%m"),
Day = format(DateTime, "%d"),
Hour = format(DateTime, "%H")) %>%
select(Year, Month, Day, Hour, t.1, p.1, rh.1, u.1)  # Keep necessary columns
# Step 3: Define metadata and headers
obs_file <- "your_dataset_fixed.obs"
# Open file for writing
sink(obs_file)
# Metadata line (simulating CRHMr output)
cat("tprhu created by CRHMr function writeObsFile\n")
# Variable names and units (as required by CRHMr)
cat("t\t1 (C)\n")
cat("p\t1 (mm)\n")
cat("rh\t1 (%)\n")
cat("u\t1 (m/s)\n")
# Separator before actual data
cat("################\n")
# Close file
sink()
# Step 4: Append data without row names and without the units row
write.table(df, file=obs_file, append=TRUE, row.names=FALSE, col.names=TRUE
# Load required library
library(dplyr)
# Step 1: Read the CSV file
df <- read.csv("ERAdata.csv", stringsAsFactors = FALSE)
# Step 2: Convert Date-Time into Year, Month, Day, Hour format
df <- df %>%
mutate(DateTime = as.POSIXct(Index, format="%Y-%m-%d %H:%M:%S")) %>%
mutate(Year = format(DateTime, "%Y"),
Month = format(DateTime, "%m"),
Day = format(DateTime, "%d"),
Hour = format(DateTime, "%H")) %>%
select(Year, Month, Day, Hour, t.1, p.1, rh.1, u.1)  # Keep necessary columns
# Step 3: Define metadata and headers
obs_file <- "your_dataset_fixed.obs"
# Open file for writing
sink(obs_file)
# Metadata line (simulating CRHMr output)
cat("tprhu created by CRHMr function writeObsFile\n")
# Variable names and units (as required by CRHMr)
cat("t\t1 (C)\n")
cat("p\t1 (mm)\n")
cat("rh\t1 (%)\n")
cat("u\t1 (m/s)\n")
# Separator before actual data
cat("################\n")
# Close file
sink()
# Step 4: Append data without row names and without the units row
write.table(df, file=obs_file, append=TRUE, row.names=FALSE, col.names=TRUE)
#constuct file path using here package
climate_data_wfdei <- here("data", "climate_data.obs")
cimate_data_era <- here("your_dataset_fixed.obs")
climate_data <- readObsFile(cimate_data_era, timezone = 'MST', quiet = F)
# Load required library
library(dplyr)
# Step 1: Read the CSV file
df <- read.csv("ERAdata.csv", stringsAsFactors = FALSE)
# Step 2: Convert Date-Time into Year, Month, Day, Hour format
df <- df %>%
mutate(Index = as.POSIXct(Index, format="%Y-%m-%d %H:%M:%S")) %>%
select(Index, t.1, p.1, rh.1, u.1)  # Keep the required columns
# Step 3: Define metadata and headers
obs_file <- "your_dataset_fixed.obs"
# Open file for writing
sink(obs_file)
# Metadata line (simulating CRHMr output)
cat("tprhu created by CRHMr function writeObsFile\n")
# Variable names and units (as required by CRHMr)
cat("t\t1 (C)\n")
cat("p\t1 (mm)\n")
cat("rh\t1 (%)\n")
cat("u\t1 (m/s)\n")
# Separator before actual data
cat("################\n")
# Close file
sink()
# Step 4: Append data without row names and without the units row
write.table(df, file=obs_file, append=TRUE, row.names=FALSE, col.names=TRUE)
# Step 4: Append data without row names and without the units row
write.table(df, file=obs_file, append=TRUE, row.names=FALSE, col.names=TRUE)
#constuct file path using here package
climate_data_wfdei <- here("data", "climate_data.obs")
cimate_data_era <- here("your_dataset_fixed.obs")
climate_data <- readObsFile(cimate_data_era, timezone = 'MST', quiet = F)
# Load required libraries
library(dplyr)
# Step 1: Read the CSV file (Replace 'your_dataset.csv' with your actual filename)
df <- read.csv("ERAdata.csv", stringsAsFactors = FALSE)
# Step 2: Ensure Index column is in POSIXct format
df <- df %>%
mutate(Index = as.POSIXct(Index, format="%Y-%m-%d %H:%M:%S")) %>%
select(Index, t.1, p.1, rh.1, u.1)  # Keep the required columns
# Step 3: Define output file name
obs_file <- "your_dataset_fixed.obs"
# Step 4: Write Metadata & Headers
sink(obs_file)  # Open file for writing
# Metadata (similar to CRHMr format)
cat("tprhu created by CRHMr function writeObsFile\n")
# Variable names and units
cat("Index\t t\t1 (C)\n")
cat("p\t1 (mm)\n")
cat("rh\t1 (%)\n")
cat("u\t1 (m/s)\n")
# Separator line before data
cat("################\n")
sink()  # Close the metadata writing
# Step 5: Append the data while keeping POSIXct format
write.table(df, file=obs_file, append=TRUE, row.names=FALSE, col.names=FALSE, quote=FALSE, sep="\t")
#constuct file path using here package
climate_data_wfdei <- here("data", "climate_data.obs")
cimate_data_era <- here("your_dataset_fixed.obs")
climate_data <- readObsFile(cimate_data_era, timezone = 'MST', quiet = F)
# Load required library
library(dplyr)
# Step 1: Read the CSV file (Replace 'your_dataset.csv' with your actual filename)
df <- read.csv("ERAdata.csv", stringsAsFactors = FALSE)
# Step 2: Ensure Index column is in POSIXct format
df <- df %>%
mutate(Index = as.POSIXct(Index, format="%Y-%m-%d %H:%M:%S")) %>%
select(Index, t.1, p.1, rh.1, u.1)  # Keep the required columns
# Rename columns to match CRHMr structure
colnames(df) <- c("Index", "t.1", "ea.1", "u.1", "Qsi.1", "Qli.1", "p.1")
# Step 3: Define output file name
obs_file <- "your_dataset_fixed.obs"
# Step 4: Write Metadata & Headers
sink(obs_file)  # Open file for writing
# Metadata line (mimicking CRHMr output)
cat("teauQsiQlip created by CRHMr function writeObsFile\n")
# Variable names and units (matching ecohydrology format)
cat("t\t1 (C)\n")
cat("ea\t1 (kPa)\n")
cat("u\t1 (m/s)\n")
cat("Qsi\t1 (W/m2)\n")
cat("Qli\t1 (W/m2)\n")
cat("p\t1 (mm)\n")
# Separator before actual data
cat("################\t t.1\t ea.1\t u.1\t Qsi.1\t Qli.1\t p.1\n")
sink()  # Close file
# Step 5: Append the data while keeping POSIXct format and space-separated values
write.table(df, file=obs_file, append=TRUE, row.names=FALSE, col.names=FALSE, quote=FALSE, sep="\t")
#constuct file path using here package
climate_data_wfdei <- here("data", "climate_data.obs")
cimate_data_era <- here("your_dataset_fixed.obs")
climate_data <- readObsFile(cimate_data_era, timezone = 'MST', quiet = F)
# Load required library
library(dplyr)
# Step 1: Read the CSV file (Replace 'your_dataset.csv' with your actual filename)
df <- read.csv("ERAdata.csv", stringsAsFactors = FALSE)
# Step 2: Ensure Index column is in POSIXct format
df <- df %>%
mutate(Index = as.POSIXct(Index, format="%Y-%m-%d %H:%M:%S")) %>%
select(Index, t.1, p.1, rh.1, u.1)  # Keep the required columns
# Rename columns to match CRHMr structure
colnames(df) <- c("Index", "t.1", "ea.1", "u.1", "Qsi.1", "Qli.1", "p.1")
# Step 1: Read the CSV file (Replace 'your_dataset.csv' with your actual filename)
df <- read.csv("ERAdata.csv", stringsAsFactors = FALSE)
# Step 2: Ensure Index column is in POSIXct format
df <- df %>%
mutate(Index = as.POSIXct(Index, format="%Y-%m-%d %H:%M:%S")) %>%
select(Index, t.1, p.1, rh.1, u.1)  # Keep the required columns
df <- df %>%
mutate(Qsi.1 = 0,  # Fill with 0
Qli.1 = 0) %>%
rename(ea.1 = rh.1)
# Rename columns to match CRHMr structure
colnames(df) <- c("Index", "t.1", "ea.1", "u.1", "Qsi.1", "Qli.1", "p.1")
# Step 3: Define output file name
obs_file <- "your_dataset_fixed.obs"
# Step 4: Write Metadata & Headers
sink(obs_file)  # Open file for writing
# Metadata line (mimicking CRHMr output)
cat("teauQsiQlip created by CRHMr function writeObsFile\n")
# Variable names and units (matching ecohydrology format)
cat("t\t1 (C)\n")
cat("ea\t1 (kPa)\n")
cat("u\t1 (m/s)\n")
cat("Qsi\t1 (W/m2)\n")
cat("Qli\t1 (W/m2)\n")
cat("p\t1 (mm)\n")
# Separator before actual data
cat("################\t t.1\t ea.1\t u.1\t Qsi.1\t Qli.1\t p.1\n")
sink()  # Close file
# Step 5: Append the data while keeping POSIXct format and space-separated values
write.table(df, file=obs_file, append=TRUE, row.names=FALSE, col.names=FALSE, quote=FALSE, sep="\t")
#constuct file path using here package
climate_data_wfdei <- here("data", "climate_data.obs")
cimate_data_era <- here("your_dataset_fixed.obs")
climate_data <- readObsFile(cimate_data_era, timezone = 'MST', quiet = F)
#constuct file path using here package
climate_data_wfdei <- here("data", "climate_data.obs")
cimate_data_era <- here("your_dataset_fixed.obs")
climate_data <- readObsFile(cimate_data_era, timezone = 'MST', quiet = F)
#constuct file path using here package
climate_data_wfdei <- here("data", "climate_data.obs")
cimate_data_era <- here("your_dataset_fixed.obs")
climate_data <- readObsFile(cimate_data_era, timezone = 'MST', quiet = F)
# Load required libraries
library(dplyr)
# Step 1: Read the CSV file (Replace 'your_dataset.csv' with your actual filename)
df <- read.csv("ERAdata.csv", stringsAsFactors = FALSE)
# Step 2: Ensure Index column is in POSIXct format
df <- df %>%
mutate(Index = as.POSIXct(Index, format="%Y-%m-%d %H:%M:%S")) %>%
select(Index, t.1, p.1, rh.1, u.1)  # Keep required columns
# Step 3: Add missing columns (Qsi.1 & Qli.1) filled with 0
df <- df %>%
mutate(Qsi.1 = 0,  # Fill with 0
Qli.1 = 0) %>%
rename(ea.1 = rh.1)  # Rename rh.1 to ea.1 to match CRHMr format
# Step 4: Define output file name
obs_file <- "your_dataset_fixed.obs"
# Step 5: Write Metadata & Headers
sink(obs_file)  # Open file for writing
# Metadata line (mimicking CRHMr output)
cat("teauQsiQlip created by CRHMr function writeObsFile\n")
# Variable names and units (matching ecohydrology format)
cat("t\t1 (C)\n")
cat("ea\t1 (kPa)\n")
cat("u\t1 (m/s)\n")
cat("Qsi\t1 (W/m2)\n")
cat("Qli\t1 (W/m2)\n")
cat("p\t1 (mm)\n")
# Separator before actual data
cat("################\t t.1\t ea.1\t u.1\t Qsi.1\t Qli.1\t p.1\n")
sink()  # Close file
# Step 6: Append the data while keeping POSIXct format and space-separated values
write.table(df, file=obs_file, append=TRUE, row.names=FALSE, col.names=FALSE, quote=FALSE, sep="\t")
print("Successfully converted CSV to CRHMr ecohydrology .obs format with Qsi.1 & Qli.1 as 0!")
#constuct file path using here package
climate_data_wfdei <- here("data", "climate_data.obs")
cimate_data_era <- here("your_dataset_fixed.obs")
climate_data <- readObsFile(cimate_data_era, timezone = 'MST', quiet = F)
#constuct file path using here package
climate_data_wfdei <- here("data", "climate_data.obs")
cimate_data_era <- here("your_dataset_fixed.obs")
climate_data <- readObsFile(cimate_data_era, timezone = 'MST', quiet = F)
#constuct file path using here package
climate_data_wfdei <- here("data", "climate_data.obs")
cimate_data_era <- here("your_dataset_fixed.obs")
climate_data <- readObsFile(cimate_data_era, timezone = 'MST', quiet = F)
#constuct file path using here package
climate_data_wfdei <- here("data", "climate_data.obs")
cimate_data_era <- here("your_dataset_fixed.obs")
climate_data <- readObsFile(cimate_data_era, timezone = 'MST', quiet = F)
#constuct file path using here package
climate_data_wfdei <- here("data", "climate_data.obs")
cimate_data_era <- here("your_dataset_fixed.obs")
climate_data <- readObsFile(cimate_data_era, timezone = 'MST', quiet = F)
#constuct file path using here package
climate_data_wfdei <- here("data", "climate_data.obs")
cimate_data_era <- here("your_dataset_fixed.obs")
climate_data <- readObsFile(cimate_data_era, timezone = 'MST', quiet = F)
# Load required library
library(dplyr)
# Step 2: Ensure Index column is in POSIXct format
df <- df %>%
mutate(Index = as.POSIXct(Index, format="%Y-%m-%d %H:%M:%S")) %>%
select(Index, t.1, p.1, rh.1, u.1)  # Keep only required columns
# Step 3: Add missing columns (Qsi.1 & Qli.1) filled with 0
df <- df %>%
mutate(Qsi.1 = 0,  # Fill with 0
Qli.1 = 0) %>%
rename(ea.1 = rh.1)  # Rename rh.1 to ea.1 (Vapor Pressure) to match CRHMr format
# Step 1: Read the CSV file (Replace 'your_dataset.csv' with your actual filename)
df <- read.csv("your_dataset.csv", stringsAsFactors = FALSE)
# Load required library
library(dplyr)
# Step 1: Read the CSV file (Replace 'your_dataset.csv' with your actual filename)
df <- read.csv("ERAdata.csv", stringsAsFactors = FALSE)
# Step 2: Ensure Index column is in POSIXct format
df <- df %>%
mutate(Index = as.POSIXct(Index, format="%Y-%m-%d %H:%M:%S")) %>%
select(Index, t.1, p.1, rh.1, u.1)  # Keep only required columns
# Step 3: Add missing columns (Qsi.1 & Qli.1) filled with 0
df <- df %>%
mutate(Qsi.1 = 0,  # Fill with 0
Qli.1 = 0) %>%
rename(ea.1 = rh.1)  # Rename rh.1 to ea.1 (Vapor Pressure) to match CRHMr format
View(df)
# Step 4: Define output file name
obs_file <- "your_dataset_fixed.obs"
# Metadata line (mimicking CRHMr output)
cat("teauQsiQlip created by CRHMr function writeObsFile\n")
line
line
# Metadata line (mimicking CRHMr output)
cat("teauQsiQlip created by CRHMr function writeObsFile\n")
# Variable names and units (matching ecohydrology format)
cat("t\t1 (C)\n")
cat("ea\t1 (kPa)\n")
cat("u\t1 (m/s)\n")
cat("Qsi\t1 (W/m2)\n")
cat("Qli\t1 (W/m2)\n")
cat("p\t1 (mm)\n")
# Separator before actual data
cat("################\n")
# Correct headers for data section
cat("Index\t t.1\t ea.1\t u.1\t Qsi.1\t Qli.1\t p.1\n")
sink()  # Close file
# Step 6: Append the data while keeping POSIXct format and space-separated values
write.table(df, file=obs_file, append=TRUE, row.names=FALSE, col.names=FALSE, quote=FALSE, sep="\t")
# Load required library
library(dplyr)
# Load required library
library(dplyr)
# Step 1: Read the CSV file (Replace 'your_dataset.csv' with your actual filename)
df <- read.csv("ERAdata.csv", stringsAsFactors = FALSE)
# Step 2: Ensure Index column is in POSIXct format
df <- df %>%
mutate(Index = as.POSIXct(Index, format="%Y-%m-%d %H:%M:%S")) %>%
select(Index, t.1, p.1, rh.1, u.1)  # Keep only required columns
# Step 3: Add missing columns (Qsi.1 & Qli.1) filled with 0
df <- df %>%
mutate(Qsi.1 = 0,  # Fill with 0
Qli.1 = 0) %>%
rename(ea.1 = rh.1)  # Rename rh.1 to ea.1 (Vapor Pressure) to match CRHMr format
# Step 4: Define output file name
obs_file <- "your_dataset_fixed.obs"
# Step 5: Write Metadata & Headers
sink(obs_file)  # Open file for writing
# Metadata line (mimicking CRHMr output)
cat("teauQsiQlip created by CRHMr function writeObsFile\n")
# Variable names and units (matching ecohydrology format)
cat("t\t1 (C)\n")
cat("ea\t1 (kPa)\n")
cat("u\t1 (m/s)\n")
cat("Qsi\t1 (W/m2)\n")
cat("Qli\t1 (W/m2)\n")
cat("p\t1 (mm)\n")
# Separator before actual data
cat("################\n")
# Correct headers for data section
cat("Index\t t.1\t ea.1\t u.1\t Qsi.1\t Qli.1\t p.1\n")
sink()  # Close file
# Step 6: Append the data while keeping POSIXct format and space-separated values
write.table(df, file=obs_file, append=TRUE, row.names=FALSE, col.names=FALSE, quote=FALSE, sep="\t")
print("Successfully converted CSV to CRHMr ecohydrology .obs format with Qsi.1 & Qli.1 as 0!")
print("Successfully converted CSV to CRHMr ecohydrology .obs format with Qsi.1 & Qli.1 as 0!")
df
df <- df %>%
select(index, t.1, ea.1, u.1, Qsi.1, Qli.1, p.1)
df <- df %>%
select(Index, t.1, ea.1, u.1, Qsi.1, Qli.1, p.1)
df
df <- df %>%
select(Index, t.1, ea.1, u.1, Qsi.1, Qli.1, p.1)
# Step 4: Define output file name
obs_file <- "your_dataset_fixed.obs"
# Step 5: Write Metadata & Headers
sink(obs_file)  # Open file for writing
# Metadata line (mimicking CRHMr output)
cat("teauQsiQlip created by CRHMr function writeObsFile\n")
# Variable names and units (matching ecohydrology format)
cat("t\t1 (C)\n")
cat("ea\t1 (kPa)\n")
cat("u\t1 (m/s)\n")
cat("Qsi\t1 (W/m2)\n")
cat("Qli\t1 (W/m2)\n")
cat("p\t1 (mm)\n")
# Separator before actual data
cat("################\n")
# Correct headers for data section
cat("Index\t t.1\t ea.1\t u.1\t Qsi.1\t Qli.1\t p.1\n")
sink()  # Close file
# Step 6: Append the data while keeping POSIXct format and space-separated values
write.table(df, file=obs_file, append=TRUE, row.names=FALSE, col.names=FALSE, quote=FALSE, sep="\t")
print("Successfully converted CSV to CRHMr ecohydrology .obs format with Qsi.1 & Qli.1 as 0!")
#constuct file path using here package
climate_data_wfdei <- here("data", "climate_data.obs")
cimate_data_era <- here("your_dataset_fixed.obs")
climate_data <- readObsFile(cimate_data_era, timezone = 'MST', quiet = F)
# Load required library
library(dplyr)
# Step 1: Read the CSV file
df <- read.csv("ERAdata.csv", stringsAsFactors = FALSE)
# Step 2: Convert Index column to POSIXct and force correct format
df <- df %>%
mutate(Index = as.POSIXct(Index, format="%Y-%m-%d %H:%M:%S", tz="UTC")) %>%
arrange(Index)  # Ensure chronological order
# Step 3: Check if first timestamp is 00:00:00
if (format(df$Index[1], "%H:%M:%S") != "00:00:00") {
print("Warning: First timestamp is not 00:00:00. Check original data.")
}
# Step 4: Proceed with file writing (same as before)
obs_file <- "your_dataset_fixed.obs"
sink(obs_file)
cat("teauQsiQlip created by CRHMr function writeObsFile\n")
cat("t\t1 (C)\n")
cat("ea\t1 (kPa)\n")
cat("u\t1 (m/s)\n")
cat("Qsi\t1 (W/m2)\n")
cat("Qli\t1 (W/m2)\n")
cat("p\t1 (mm)\n")
cat("################\n")
cat("Index\t t.1\t ea.1\t u.1\t Qsi.1\t Qli.1\t p.1\n")
sink()
write.table(df, file=obs_file, append=TRUE, row.names=FALSE, col.names=FALSE, quote=FALSE, sep="\t")
print("Successfully converted CSV to .obs format with correct timestamps!")
# Load required library
library(dplyr)
# Step 1: Read the CSV file
df <- read.csv("ERAdata.csv", stringsAsFactors = FALSE)
# Step 2: Convert Index column to POSIXct and force correct format
df <- df %>%
mutate(Index = as.POSIXct(Index, format="%Y-%m-%d %H:%M:%S", tz="UTC")) %>%
arrange(Index)  # Ensure chronological order
# Step 3: Check if first timestamp is 00:00:00
if (format(df$Index[1], "%H:%M:%S") != "00:00:00") {
print("Warning: First timestamp is not 00:00:00. Check original data.")
}
# Step 4: Proceed with file writing (same as before)
obs_file <- "your_dataset_fixed.obs"
sink(obs_file)
cat("teauQsiQlip created by CRHMr function writeObsFile\n")
cat("t\t1 (C)\n")
cat("ea\t1 (kPa)\n")
cat("u\t1 (m/s)\n")
cat("Qsi\t1 (W/m2)\n")
cat("Qli\t1 (W/m2)\n")
cat("p\t1 (mm)\n")
cat("################\n")
cat("Index\t t.1\t ea.1\t u.1\t Qsi.1\t Qli.1\t p.1\n")
sink()
write.table(df, file=obs_file, append=TRUE, row.names=FALSE, col.names=FALSE, quote=FALSE, sep="\t")
print("Successfully converted CSV to .obs format with correct timestamps!")
# Load required library
library(dplyr)
# Step 1: Read the CSV file
df <- read.csv("ERAdata.csv", stringsAsFactors = FALSE)
# Step 2: Convert Index column to POSIXct and force correct format
df <- df %>%
mutate(Index = as.POSIXct(Index, format="%Y-%m-%d %H:%M:%S", tz="UTC")) %>%
arrange(Index)  # Ensure chronological order
# Step 3: Check if first timestamp is 00:00:00
if (format(df$Index[1], "%H:%M:%S") != "00:00:00") {
print("Warning: First timestamp is not 00:00:00. Check original data.")
}
# Step 4: Proceed with file writing (same as before)
obs_file <- "your_dataset_fixed.obs"
sink(obs_file)
cat("teauQsiQlip created by CRHMr function writeObsFile\n")
cat("t\t1 (C)\n")
cat("ea\t1 (kPa)\n")
cat("u\t1 (m/s)\n")
cat("Qsi\t1 (W/m2)\n")
cat("Qli\t1 (W/m2)\n")
cat("p\t1 (mm)\n")
cat("################\n")
cat("Index\t t.1\t ea.1\t u.1\t Qsi.1\t Qli.1\t p.1\n")
sink()
write.table(df, file=obs_file, append=TRUE, row.names=FALSE, col.names=FALSE, quote=FALSE, sep="\t")
print("Successfully converted CSV to .obs format with correct timestamps!")
# Load required library
library(dplyr)
# Step 1: Read the CSV file (replace with your actual filename)
df <- read.csv("ERAdata.csv", stringsAsFactors = FALSE)
# Step 2: Ensure Index column remains in POSIXct format without modification
df <- df %>%
mutate(Index = as.POSIXct(Index, format="%Y-%m-%d %H:%M:%S")) %>%
select(Index, t.1)  # Keep required columns
# Step 3: Add missing columns (Qsi.1 & Qli.1 filled with 0)
df <- df %>%
mutate(ea.1 = NA,   # Placeholder for vapor pressure (if missing, use NA)
u.1 = NA,    # Placeholder for wind speed (if missing, use NA)
Qsi.1 = 0,   # Fill with 0
Qli.1 = 0,   # Fill with 0
p.1 = NA)    # Placeholder for precipitation
# Step 4: Define output file name
obs_file <- "your_dataset_fixed.obs"
# Step 5: Write Metadata & Headers (ensuring correct format)
sink(obs_file)  # Open file for writing
# Metadata line (mimicking CRHMr output)
cat("teauQsiQlip created by CRHMr function writeObsFile\n")
# Variable names and units
cat("t\t1 (C)\n")
cat("ea\t1 (kPa)\n")
cat("u\t1 (m/s)\n")
cat("Qsi\t1 (W/m2)\n")
cat("Qli\t1 (W/m2)\n")
cat("p\t1 (mm)\n")
# Separator before actual data
cat("################\n")
# Correct headers for data section
cat("Index\t t.1\t ea.1\t u.1\t Qsi.1\t Qli.1\t p.1\n")
sink()  # Close file
# Step 6: Append the data while keeping timestamps unchanged
write.table(df, file=obs_file, append=TRUE, row.names=FALSE, col.names=FALSE, quote=FALSE, sep="\t", na="NA")
print("Successfully converted CSV to .obs format with timestamps unchanged!")
