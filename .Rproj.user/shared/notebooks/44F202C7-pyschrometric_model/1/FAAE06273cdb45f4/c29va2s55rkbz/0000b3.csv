"0","# month_wise grid plot with 40 lines"
"0","lines_graph_maker <- function(calculate, column, ylabel, legend){"
"0","  monthly_data <- data %>%  "
"0","    group_by(year, month) %>% "
"0","    summarize(mean = calculate({{column}}))"
"0","  "
"0","  monthly_data$year <- factor(monthly_data$year)"
"0","  color_palette <- colorRampPalette(c(""#0165fc"", ""yellow"", ""red""))(length(unique(monthly_data$year)))"
"0","  "
"0","  ggplot(monthly_data, aes(month, mean, group = year, color = year)) +"
"0","    geom_line(size = ifelse(between(as.integer(monthly_data$year), 1, 1) |"
"0","                              between(as.integer(monthly_data$year), 40, 40), 0.7, 0.2),"
"0","              alpha = 1) + "
"0","    scale_color_manual(values = color_palette) +"
"0","    # geom_line(data = monthly_data[1, ], aes(group = year, color = year), size = 2) +"
"0","    # geom_line(data = monthly_data[length(monthly_data$year), ], aes(group = year, color = year), size = 2) +"
"0","    theme_bw() +"
"0","    theme(axis.title = element_text(size = 10)) +"
"0","    ylab(ylabel) +"
"0","    xlab("""") +"
"0","    theme(legend.position = legend, legend.text = element_text(size = 12))"
"0","}"
"0",""
"0","plot1  <- lines_graph_maker(max,  t.1,  ""Maximum Daily Temperature °C"", legend=""none"")"
"2","`summarise()` has grouped output by 'year'. You can override using the `.groups` argument."
"2","Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.
Please use `linewidth` instead."
"0","plot2  <- lines_graph_maker(min,  t.1,  ""Minimum Daily Temperature °C"", legend=""none"")"
"2","`summarise()` has grouped output by 'year'. You can override using the `.groups` argument."
"0","plot3  <- lines_graph_maker(mean, rh.1,  ""Relative Humidity (%)"", legend=""none"")"
"2","`summarise()` has grouped output by 'year'. You can override using the `.groups` argument."
"0","plot4  <- lines_graph_maker(mean, u.1,  expression(""Wind (ms""^-1*"")""), legend=""none"")"
"2","`summarise()` has grouped output by 'year'. You can override using the `.groups` argument."
"0","plot5  <- lines_graph_maker(sum,  p.1,  ""Precipitation (mm)"", legend=""none"")"
"2","`summarise()` has grouped output by 'year'. You can override using the `.groups` argument."
"0","png(""plots/4plots_combined.tiff"", height = 8, width = 8, units = ""in"", res = 300)"
